# default docker image
image: node

stages:
  - build
  - test
  - deploy
build website:
  stage: build
  script:
    - npm install
    #    - npm test
    - npm run build
    #    using stream editor to replace %%VERSION%% marker with the 8 places hash head
    #    if there are more than one occurrences, place a global flag g at the end of the regex
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./build/index.html
  #  save build artifacts in build directory
  artifacts:
    paths:
      - build/

test artifact:
  image: alpine
  stage: test
  script:
    #   favicon is attached by webpack
    - grep -q "icon" ./build/index.html
    #   bundle.js is attached by webpack
    - grep -q "bundle.js" ./build/index.html
#    you can potentially check last exit code by echo $?

test website:
  stage: test
  script:
    - npm install
    #    npm start alone would block CLI
    - npm start &
    - sleep 3
    #    download the website
    - apk add --no-cache curl
    - curl -s "http://localhost:9999" | tac | tac | grep -q "Image is generated by web worker."
    - curl -s "http://localhost:9999" | tac | tac | grep -q "$CI_COMMIT_SHORT_SHA"

# deploy to surge.sh, a static website hosting service
# remember to define environment variables in GitLab settings -> CI/CD
# SURGE_LOGIN and SURGE TOKEN
# sign up by running surge from terminal
#deploy to surge:
#  stage: deploy
#  script:
#    - npm install -g surge
#    - surge --project ./build --domain xxx.surge.sh


